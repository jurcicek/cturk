<wiki:comment>
This text is using the Google Code wiki syntax.
</wiki:comment>

= INSTALATION MANUAL FOR THE CTURK PROJECT = 

AUTHOR: FILIP JURCICEK

VERSION: 23/07/2011

== Contents == 

<wiki:toc max_depth="2" />



= INTRODUCTION =

This document describes how to download the code, configure the computer used for deployment, 
installing all necessary software, and runing the CTURK project.

This manual will describe a specific case of installing the CTURK on the Ubuntu 11.04 Linux distribution.

It also describe how to deploy the CTURK-TRANSCRIBER which is an example of an external HIT working with the CTURK.

CUED has a more detailed description of MTURK-TRANSCRIBER which is a variation of the CTURK-TRANSCRIBER.



= CHECK OUT THE CODE FROM GOOGLE CODE =

If you plan to make changes, use this command to check out the code as yourself using HTTPS:

# Project members authenticate over HTTPS to allow committing changes.
{{{
svn checkout https://cturk.googlecode.com/svn/trunk/ gcturk --username xxx@xxx.com
}}}

When prompted, enter your generated googlecode.com password.
Use this command to anonymously check out the latest project source code:

# Non-members may check out a read-only working copy anonymously over HTTP.
{{{
svn checkout http://cturk.googlecode.com/svn/trunk/ gcturk-read-only
}}}

*This manual assumes that the code has been checked out into the "~/src/" directory!*

If you do not have SVN (Subversion) then it can be installed by the following command:
{{{
sudo apt-get install subversion
}}}




= INSTALLING THE REQUIERED SOFTWARE =

This secstion will describe how to install all necessary software on the Ubuntu 11.04 Linux 
distribution. You will have to have root rights, e.g. to be in the sudo group. The rest of 
the section assumes that you are logged in the root. This can be achieved by running 
the "sudo -s" command from the command line.

== CTURK == 

You will have to install Apache, MySQL and PHP:
{{{
apt-get install apache2
apt-get install mysql-server mysql-common mysql-client 
apt-get install php5
apt-get install php5-mysql
apt-get install phpmyadmin
apt-get install libdbd-mysql-perl
}}}

== CTURK-TRANSCRIEBER == 
For the CTURK-TRANSCRIEBER, an example of a HIT integrated with the CTURK, you must install perl 5.8.9. As it is not part 
of current version of Ubuntu any more, you will have to download the source code and compile it on your own.

Go to some directory where you can download the source code, e.g.:
{{{
cd ~/install
}}}
then get the source code: 
{{{
wget http://www.cpan.org/src/5.0/perl-5.8.9.tar.bz2
}}}
then extract, compile and install the code:
{{{
tar -jxf perl-5.8.9.tar.bz2
cd perl-5.8.9
./Configure -des
make
make install
}}}

Log out and log in again:

Run the following command in the shell:
{{{
perl -v
}}}
and you should see version information simillar to the following output:
{{{
This is perl, v5.8.9 built for i686-linux
Copyright 1987-2008, Larry Wall
}}}

Now, install the following packages:
{{{
apt-get install libmysqlclient15-dev libmysql++-dev libmysqlclient16-dev
apt-get install libexpat1-dev
apt-get install lame
apt-get install shntool
}}}

If you cannot compile the perl 5.8.9, you can try to trick the CTURK-TRANSCRIBER by cretaing simling between the current version of perl and the 5.8.9 version, e.g.:
{{{
ln -s /usr/bin/perl5.10.1 perl5.8.9
}}} 

Install necessary perl packages:
{{{
perl -MCPAN -e shell
cpan[1]>install YAML
cpan[2]>install XML::Simple
cpan[3]>install Test::Simple
cpan[4]>install DBD::mysql
cpan[5]>install Data::Dumper
cpan[6]>install Text:WagnerFischer
cpan[7]>exit
}}}



== Setting the Apache up ==

Enable the `public_html` directory for each user on the computer and the `mod_rewrite` module. 

{{{
cd /etc/apache2/mods-enabled
ln -s ../mods-available/userdir.conf userdir.conf
ln -s ../mods-available/userdir.load userdir.load
ln -s ../mods-available/rewrite.load rewrite.load
/etc/init.d/apache2 restart
}}}

== Setting the MySQL database up  ==

The CTURK connects only to the MYSQL database. Create the database with the name: cturk.
This manual assumes that the `cturk` user has full access the `cturk` database.
The `cturk` user's password is `cturk`.
Please change this default values into more approriate values.

Run MySQL from the commandline:
{{{
mysql -u root -p
}}}

You will get:
{{{
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 152
Server version: 5.1.54-1ubuntu4 (Ubuntu)

Copyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.
This software comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to modify and redistribute it under the GPL v2 license

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>
}}}

Create the `cturk` database:
{{{
mysql> create database cturk;
}}}

Add a user called `cturk` and grant access from localhost with the password `cturk`:
{{{
mysql> GRANT ALL ON cturk.* TO cturk@localhost IDENTIFIED BY 'cturk';
}}}


Setup the content of the database using the `docs/cturk20110125.sql` SQL scripts from the admin. 
Note all CakePHP tables start with the `cturk4_` prefix.
{{{
mysql> use cturk;
mysql> source docs/cturk20110125.sql;
}}}
This command sets up also the tables needed for the CTURK-TRANSCRIBER.

After the setup the `cturk` database will have the following users. Please remove them if you do not need them.

||*user type* || *registered email*  || *password* ||
||requester   || midfar@qq.com       || admin ||
||requester   || admin@midfar.com    || admin ||
||worker      || midfar@vip.qq.com   || admin ||


You can check the content of the database by using the phpmyadmin web interface at [http://localhost/phpmyadmin].


== Setting the PHP up ==

Now yopu have to enable the php execution in the `public_html` directories. Go to the `/etc/apache2/mods-enabled` directory.
{{{
cd /etc/apache2/mods-enabled
}}}

Edit the `php5.conf` file. Change the lines:
{{{
<IfModule mod_userdir.c>
	<Directory /home/*/public_html>
		php_admin_value engine Off
	</Directory>
</IfModule>
}}}
to:
{{{
<IfModule mod_userdir.c>
	<Directory /home/*/public_html>
		#php_admin_value engine Off
	</Directory>
</IfModule>
}}}


= CONFIGURE THE CTURK = 

The deployment of CTURK assumes deployment of into the {{{public_html}}} direcotory as it allows multiple 
users to deploy CTURK on the same computer in a conroled way.

In this task, we will assume deployment of the computer with the domain name {{{localhost}}} into 
the {{{public_html}}} directory of the {{{filip}}} user. 

SUMMARY:
 * the code is placed in: {{{/home/filip/public_html/gcturk}}}
 * the corresponding URL is: {{{http://localhost/~filip/gcturk}}}
 * the web service URL: {{{http://localhost/~filip/gcturk/cturk/server/webroot}}}

Since the code in the src directory, one has to link from the {{{public_html}}} directory to the {{{gcturk}}} directory
{{{
cd ~/src
ln -s gcturk ~/public_html
}}}

A convenient way to configure CTURK is to use the {{{switch2config}}} tool in the cturk directory.
The tool copies all necessary config files into the approriate places. 

It is used as:
{{{
bash switch2config path_to_the_config_dir
}}}
where the {{{path_to_the_config_dir}}} parameters point to the paremters contains all config files for 
setting the CTURK.

Templates of the configuration files are in the {{{config}}} directory.

The files that have to be changed are:
 * {{{app_conroller.php}}}  - will be coppied to {{{./server/}}}
 * {{{database.php}}} - will be coppied to {{{./server/config/}}}
 * {{{.htaccess}}} - will be coppied to {{{./server/webroot/}}}
 * {{{index.php}}} - will be coppied to {{{./server/webroot/}}}
 * `externalSubmit.html` - will be coppied to `./client/form/worker/`
 * {{{Config.js}}} - will be coppied to {{{./client/static/js/ui1/}}}

It is advised to make a copy of the config directory using:
{{{
cp -r config config.filip@localhost
}}}
then edit the files in the {{{config.filip@localhost}}} directory.

== Edit {{{app_controller.php}}} ==

Change the following lines:
{{{
var $SMTP_SERVER = 'smtp.zzz.com';
var $SMTP_PORT = '25';
var $SMTP_TIMEOUT = '30';
var $SMTP_EMAIL = 'zzzzz_noreply@zzz.com';
var $SMTP_USERNAME = 'zzzzz_noreply';
var $SMTP_PASSWORD = 'zzzzzzzzzzzzzz';
}}}
to a valid SMTP mail server is sending email is reqiered.

Change {{{PAYPAL_*}}} variables for proper integration with PayPal: 
{{{
var $PAYPAL_APPLICATION_ID = 'APP-zzzzzzzzzzzzzzzzz';
var $PAYPAL_API_EMAIL = 'zzzzz.zzzzzzz@zzzzz.com';
var $PAYPAL_API_USERNAME = 'zzzzz.zzzzzzz_api1.zzzzz.com';
var $PAYPAL_API_PASSWORD = 'zzzzzzzzzzzzzzzz';
var $PAYPAL_API_SIGNATURE = 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz';
var $PAYPAL_API_ENDPOINT = 'https://svcs.paypal.com/';
var $PAYPAL_REDIRECT_URL = 'https://www.paypal.com/webscr&cmd=';
}}}
The integration with PayPal will be described later.


Change the lines: 
{{{
var $RESET_PASSWORD_LINK = 'http://www.zzzzzzz.org/~zzzzz/zzzzzzzzzzz/cturk/client/resetPassword.html';
var $PAY_RETURN_LINK = 'http://www.zzzzzzz.org/~zzzzz/zzzzzzzzzzz/cturk/client/requester/index.html';
}}}
to:
{{{
var $RESET_PASSWORD_LINK = 'http://localhost/~filip/gcturk/cturk/client/resetPassword.html';
var $PAY_RETURN_LINK = 'http://localhost/~filip/gcturk/cturk/client/requester/index.html';
}}}

 # Note: `$RESET_PASSWORD_LINK` is the HTML page for resetting password, appearing in the mail to reset the password.
 # Note: `$PAY_RETURN_LINK` is the page of return when the PayPal payment finishes.

Change the {{{$CURRENCY_CODE}}} if different the cturk should a different currency with PayPal.
{{{
var $CURRENCY_CODE = 'GBP'; //USD, GBP, EUR, JPY, CAD, AUD
}}}

== Edit {{{database.php}}} ==

Change the database information: login, password, database, and prefix.

The prefix is used for all names of tables used by CTURK in the provided database.

Change the lines:
{{{
<?php
class DATABASE_CONFIG {

        var $default = array(
                'driver' => 'mysql',
                'persistent' => false,
                'host' => 'localhost',
                'login' => 'zzzzz',
                'password' => 'zzzzzzz',
                'database' => 'zzzzz',
                'prefix' => 'zzzzzz_',
                'encoding' => 'utf8'
        );
}
?>
}}}

to:
{{{
<?php
class DATABASE_CONFIG {

        var $default = array(
                'driver' => 'mysql',
                'persistent' => false,
                'host' => 'localhost',
                'login' => 'cturk',
                'password' => 'cturk',
                'database' => 'cturk',
                'prefix' => 'cturk4_',
                'encoding' => 'utf8'
        );
}
?>
}}}


== Edit {{{.htaccess}}} ==

The {{{.htaccess}}} file defines for the rewrite rules where the code is located.

Change the line:
{{{
RewriteBase /~zzzzz/zzzzzzzzzzz/cturk/server/webroot 
}}}
to:
{{{
RewriteBase /~filip/gcturk/cturk/server/webroot
}}}


== Edit {{{index.php}}} ==

In the index.php file must be changed the aboslute path to the CakePHP framawork: {{{CAKE_CORE_INCLUDE_PATH}}}
Note that {{{CAKE_CORE_INCLUDE_PATH}}} defines location of the CakePHP framework.

Change the line: 
{{{
define('CAKE_CORE_INCLUDE_PATH', DS . 'home' . DS . 'zzz' . DS . 'public_html' . DS . 'zzzzzz' . DS . 'cturk' . DS . 'CakePHP');
}}}
to:
{{{
define('CAKE_CORE_INCLUDE_PATH', DS . 'home' . DS . 'filip' . DS . 'public_html' . DS . 'gcturk' . DS . 'cturk' . DS . 'CakePHP');
}}}	


== Edit `externalSubmit.html` ==

Change the line:
{{{
<form id="form1" name="form1" method="post" action="http://zzzzzzzz/~zzzzz/zzzzzzzzzzz/cturk/server/webroot/workers/externalSubmit">
}}}
to:
{{{
<form id="form1" name="form1" method="post" action="http://localhost/~filip/gcturk/cturk/server/webroot/workers/externalSubmit">
}}}

== Edit {{{Config.js}}} ==

The {{{Config.js}}} defines the URL where all webservisces used by Javascript are located.

Change the line:
{{{
ajaxUrlPrefix: "/~zzzzz/zzzzzzzzzzz/cturk/server/webroot",
}}}
to:
{{{
ajaxUrlPrefix: "/~filip/gcturk/cturk/server/webroot",
}}}



== Use the {{{switch2config}}} tool ==
 
Then use the {{{switch2config}}} tool in the cturk directory:
{{{
switch2config ../config.filip@localhost
}}}



In addition to copying the config files, the {{{switch2config}}} also sets correct access rights to some directories:
 * Assign all users read, write, and excute rights to {{{cturk/server/tmp}}}
{{{
	chmod -R 777 cturk/server/tmp/
}}}
 * Assign {{{mod 755}}} to {{{cturk/server/webroot}}}
{{{
	chmod -R 755 cturk/server/webroot/
}}}





= CONFIGURE THE CTURK-TRANSCRIBER =

The CTURK-TRANSCRIBER is the reference inmplementation of an external HIT for the CTURK. 
The CTURK-TRANSCRIBER is located in the `gcturk/cturk-transcriber` directory.

Again, a convenient way to configure CTURK-TRANSCRIBER is to use the {{{switch2config}}} tool in the `cturk-transcriber` directory.
The tool copies all necessary config files into the approriate places. 

Templates of the configuration files are in the {{{config}}} directory.

The files that have to be changed are:
 * {{{config.xml}}}  - will be coppied to {{{./docs/}}}
 * {{{publish.sh}}} - will be coppied to {{{./docs/}}}
 * {{{start.html}}} - will be coppied to {{{./webroot/}}}
 * {{{start2.html}}} - will be coppied to {{{./webroot/}}}
 

Since you already made a copy of the config templates then edit the config files in the `config.filip@localhost` directory.

== Edit {{{config.xml}}} ==

The CTURK-TRANSCRIBER will use the same user and the database as the CTURK. Only the prefix of tables will be different (`cturk`).

Change the lines:
{{{
<?xml version="1.0" encoding="UTF-8"?>
<root>
	<username>zzzzz.zzzzzzzz@zzzzz.com</username>
	<password>zzz</password>
	<webServiceUrl>http://localhost/~zzzzz/zzzzzzzzzzz/cturk/server/webroot</webServiceUrl>
	<resourceRoot>/home/zzzzz/src/zzzzzzzzzzz/cturk-transcriber/resources</resourceRoot>
	<webappRoot>/home/zzzzz/src/zzzzzzzzzzz/cturk-transcriber/wwwroot</webappRoot>
	<webappUrl>http://www.zzzzzzz.org/~zzzzz/zzzzzzzzzzz/cturk-transcriber/wwwroot</webappUrl>
	<currencyCode>GBP</currencyCode>
	<transcriptionPrice>0.01</transcriptionPrice>
	<validationPrice>4</validationPrice>
	<mysql>
	        <dbHost>localhost</dbHost>
	        <dbName>zzzzz</dbName>
	        <dbUser>zzzzz</dbUser>
	        <dbPwd>zzzzzzz</dbPwd>
	        <dbPort>zzzz</dbPort>
	        <dbPrefix>zzzzz_</dbPrefix>
	</mysql>
</root>
}}}
to:
{{{
<?xml version="1.0" encoding="UTF-8"?>
<root>
	<username>filip.jurcicek@gmail.com</username>
	<password>lol</password>
	<webServiceUrl>http://localhost/~filip/gcturk/cturk/server/webroot</webServiceUrl>
	<resourceRoot>/home/filip/src/gcturk/cturk-transcriber/resources</resourceRoot>
	<webappRoot>/home/filip/src/gcturk/cturk-transcriber/wwwroot</webappRoot>
	<webappUrl>http://localhost/~filip/gcturk/cturk-transcriber/wwwroot</webappUrl>
	<currencyCode>GBP</currencyCode>
	<transcriptionPrice>0.01</transcriptionPrice>
	<validationPrice>4</validationPrice>
	<mysql>
	        <dbHost>localhost</dbHost>
	        <dbName>cturk</dbName>
	        <dbUser>cturk</dbUser>
	        <dbPwd>cturk</dbPwd>
	        <dbPort>3306</dbPort>
	        <dbPrefix>cturk_</dbPrefix>
	</mysql>
</root>
}}}

*Note that some HTTP servers does not allow visiting itself from the nom-localhost domain. As a result `webServiceUrl` is set to `http://localhost/~filip/gcturk/cturk/server/webroot`.*	


== Edit {{{publish.sh}}} ==

Change the lines:
{{{
WEB_ROOT="/home/zzzzz/src/zzzzzzzzzzz/cturk-transcriber/wwwroot";
DOC_ROOT="/home/zzzzz/src/zzzzzzzzzzz/cturk-transcriber/docs";
}}}
to:
{{{
WEB_ROOT="/home/filip/src/gcturk/cturk-transcriber/wwwroot";
DOC_ROOT="/home/filip/src/gcturk/cturk-transcriber/docs";
}}}
Note that `WEB_ROOT` is `cturk-transcriber's` wwwroot path and `DOC_ROOT` is `cturk-transcriber's` doc path.


== Edit {{{start.html}}} ==

Change the line:
{{{
<form id="dynamicTableForm" method="POST" action="http://zzzzzzzz/~zzzzz/zzzzzzzzzzz/cturk/server/webroot/workers/externalSubmit">
}}}
to:
{{{
<form id="dynamicTableForm" method="POST" action="http://localhost/~filip/gcturk/cturk/server/webroot/workers/externalSubmit">
}}}


== Edit {{{start2.html}}} == 

Change the line:
{{{
<form id="dynamicTableForm" method="POST" action="http://zzzzzzzz/~zzzzz/zzzzzzzzzzz/cturk/server/webroot/workers/externalSubmit">
}}}
to:
{{{
<form id="dynamicTableForm" method="POST" action="http://localhost/~filip/gcturk/cturk/server/webroot/workers/externalSubmit">
}}}


= TESTING THE DEPLOYMENT = 

You need to restart Apache at this point.
{{{
sudo /etc/init.d/apache2 restart
}}}

Visit the following [http://localhost/~filip/gcturk/cturk/server/webroot] address. You should see the configuration page of the CakePHP (not CSS styled).

Access the CTURK at [http://localhost/~filip/gcturk/cturk/client/index.html].

 
== Manually publish HITs (for testing) == 

Login to CTURK as requester at [http://localhost/~filip/gcturk/cturk/client/].

Visit [http://localhost/~filip/gcturk/cturk/client/form/requester/createHIT.html].

== Publish HITs for the CTURK-TRANSCRIBER  ==

The `publish.sh` BASH script is using a set of PERL scripts to publish HITs. 
{{{
bash publish.sh $1 $2
}}}

Note that `$1` is the folder that contains audio files to be transcribed and $2 is the folder that contains the gold standard transcriptions (reference). It can be used as it follows:
{{{
bash publish.sh /home/filip/src/gcturk/cturk-transcriber/resources/wav/test1/ /home/filip/src/gcturk/cturk-transcriber/resources/wav/auto-valid-refs-TownInfo/
}}}

Note: Every published HIT is assigned to HITGroups according to some same properties. Every HIT has none or multiple assignments.

== Worker completes HITs on CTURK ==

Visit [http://localhost/~filip/gcturk/cturk/client/]

 # Login as a Worker
 # Click HITs menu
 # Click View a HIT in this group
 # Click Accept HIT to accomplish HITs
 # Click Accepted HITs to see the full list of accepted but yet submitted HITs

==  Requester checks HITs ==

 # Log in CTurk as requester
 # Click Assignments Menu



